#!/usr/bin/env python
# -*- coding: CP1252 -*-
#
# generated by wxGlade 0.6.8 (standalone edition) on Wed Feb 05 20:51:13 2014
#

import time
from turtle import*
class Session(object):
    def __init__(self, start):
        self.start = start

    def startTimer(self, timelimit):
        n = timelimit
        #convert to miniutes
        m = n * 60
        #convert to seconds
        s = m * 60
        return s
    

    
    def newThread(self, name, description, timelimit):
        f = open("SessionID.txt","a")
        f.write("*********************" + '\n')
        f.write("Name: " + name + '\n')
        
        f.write("Description: " + description + '\n')
        
        f.write("Time: " + timelimit + '\n')
        f.close()

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame3(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame3.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.name = wx.StaticText(self, wx.ID_ANY, _("Name:"))
        self.text_ctrl_name = wx.TextCtrl(self, wx.ID_ANY, "")
        self.description = wx.StaticText(self, wx.ID_ANY, _("Description:"))
        self.text_ctrl_desc = wx.TextCtrl(self, wx.ID_ANY, "")
        self.hour = wx.StaticText(self, wx.ID_ANY, _("Hours:"))
        self.text_ctrl_hr = wx.TextCtrl(self, wx.ID_ANY, "")
        self.minutes = wx.StaticText(self, wx.ID_ANY, _("Minutes:"))
        self.text_ctrl_min = wx.TextCtrl(self, wx.ID_ANY, "")
        self.seconds = wx.StaticText(self, wx.ID_ANY, _("Seconds:"))
        self.text_ctrl_sec = wx.TextCtrl(self, wx.ID_ANY, "")
        self.button = wx.Button(self, wx.ID_ANY, _("Start"))
        self.display = wx.Button(self, wx.ID_ANY, "")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.start, self.button)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame3.__set_properties
        self.SetTitle(_("Remainder Notes v1.0"))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame3.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.FlexGridSizer(6, 2, 1, 1)
        grid_sizer_1.Add(self.name, 0, 0, 0)
        grid_sizer_1.Add(self.text_ctrl_name, 0, 0, 0)
        grid_sizer_1.Add(self.description, 0, 0, 0)
        grid_sizer_1.Add(self.text_ctrl_desc, 0, 0, 0)
        grid_sizer_1.Add(self.hour, 0, 0, 0)
        grid_sizer_1.Add(self.text_ctrl_hr, 0, 0, 0)
        grid_sizer_1.Add(self.minutes, 0, 0, 0)
        grid_sizer_1.Add(self.text_ctrl_min, 0, 0, 0)
        grid_sizer_1.Add(self.seconds, 0, 0, 0)
        grid_sizer_1.Add(self.text_ctrl_sec, 0, 0, 0)
        grid_sizer_1.Add(self.button, 0, 0, 0)
        grid_sizer_1.Add(self.display, 0, 0, 0)
        sizer_2.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_2)
        sizer_2.Fit(self)
        self.Layout()
        # end wxGlade

    def start(self, event):  # wxGlade: MyFrame3.<event_handler>
        name = self.text_ctrl_name.Value
        description = self.text_ctrl_desc.Value
        hours = self.text_ctrl_hr.Value
        minutes = self.text_ctrl_min.Value
        seconds = self.text_ctrl_sec.Value
        t_sec = int(seconds) + (int(minutes)*60) + (int(hours)*60*60)
        timelimit = hours + ":" + minutes + ":" + seconds
        go = Session("yes")
        go.newThread(name, description, timelimit)

        def countdown(t_sec):
            s = t_sec
            i = s
            while(i >= 0):
                self.display.SetLabel(str(i))
                time.sleep(1)
                i = i - 1
        countdown(t_sec)
        event.Skip()

# end of class MyFrame3
if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name

    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_4 = MyFrame3(None, wx.ID_ANY, "")
    app.SetTopWindow(frame_4)
    frame_4.Show()
    app.MainLoop()
